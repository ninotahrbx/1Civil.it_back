name: SonarQube FIX (marker + auto-POM)

on:
  workflow_dispatch: {}   # bouton "Run workflow"

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - name: Marker
        run: echo "âœ… NEW FIX WORKFLOW is running at $(date)"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run tests
        run: mvn -B -ntp -f "$POM" -Dspring.profiles.active=test test

      - name: Upload surefire reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: |
            **/target/surefire-reports/*.txt
            **/target/surefire-reports/*.xml
            **/target/surefire-reports/*.dumpstream

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Trouver le bon pom.xml et exporter POM & DIR
      - name: Locate pom.xml
        id: locate
        run: |
          set -e
          echo "Workspace: $(pwd)"
          echo "POMs trouvÃ©s :"
          find . -maxdepth 6 -name pom.xml -print
          # essaie un dossier qui ressemble Ã  1CiviL.it-backend (insensible Ã  la casse grÃ¢ce au pattern)
          POM=$(find . -maxdepth 6 -path "*/1*Civi*l*.it-backend/pom.xml" -print -quit || true)
          # sinon, 1er pom trouvÃ©
          if [ -z "$POM" ]; then POM=$(find . -maxdepth 6 -name pom.xml -print -quit); fi
          if [ -z "$POM" ]; then echo "Aucun pom.xml trouvÃ©" >&2; exit 1; fi
          DIR=$(dirname "$POM")
          echo "ðŸ“„ POM sÃ©lectionnÃ©: $POM"
          echo "POM=$POM" >> $GITHUB_ENV
          echo "DIR=$DIR" >> $GITHUB_ENV

      - name: Build (tests + JaCoCo)
        run: mvn -B -ntp -f "$POM" clean verify jacoco:report

      - name: Sonar analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B -ntp -f "$POM" org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=ninotahrbx_1Civil.it_back \
            -Dsonar.coverage.jacoco.xmlReportPaths="$DIR/target/site/jacoco/jacoco.xml"
            # Si SonarCloud :
            # -Dsonar.host.url=https://sonarcloud.io -Dsonar.or
